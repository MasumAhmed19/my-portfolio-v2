generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

enum Role {
  ADMIN
  USER
}

model User {
  id          Int          @id @default(autoincrement())
  name        String
  email       String       @unique
  password    String // hashed password
  avatar      String? // profile image
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  role        Role         @default(USER)
  posts       Posts[]
  projects    Projects[]
  experiences Experience[]
  Comment     Comment[]
}

model Projects {
  id          Int      @id @default(autoincrement())
  title       String
  slug        String   @unique
  description String
  tags        String[]
  images      String[]
  isFeatured  Boolean  @default(false)
  views       Int      @default(0)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  author   User @relation(fields: [authorId], references: [id])
  authorId Int
}

model Experience {
  id          Int      @id @default(autoincrement())
  title       String
  companyName String
  jobType     String // intern remote 
  description String
  tags        String[]
  images      String[]
  startDate   String
  EndDate     String
  isFeatured  Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  author   User @relation(fields: [authorId], references: [id])
  authorId Int
}

model Posts {
  id          Int      @id @default(autoincrement())
  title       String
  slug        String   @unique
  description String
  content     Json
  tags        String[]
  images      String[]
  isFeatured  Boolean  @default(false)
  views       Int      @default(0)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  author   User @relation(fields: [authorId], references: [id])
  authorId Int

  comments Comment[]
}

model Comment {
  id        Int      @id @default(autoincrement())
  content   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  post   Posts @relation(fields: [postId], references: [id])
  postId Int

  author   User @relation(fields: [authorId], references: [id])
  authorId Int
}
